<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name="jit.gl.isf" module="ISF" category="ISF">
	
	<digest>
		Render ISF files to GL textures
	</digest>
	
	<description>
		Use <o>jit.gl.isf</o> to render <a href="https://isf.video">ISF</a> files to GL textures.
	</description>
	
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			Vidvox
		</metadata>
		<metadata name="tag">Jitter</metadata>
		<metadata name="tag">GLSL</metadata>
		<metadata name="tag">ISF</metadata>
		<metadata name="tag">OpenGL</metadata>
	</metadatalist>
	
	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				GL textures, messages in
			</digest>
			<description>
				TEXT_HERE
			</description>
		</inlet>
	</inletlist>
	
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="matrix">
			<digest>
				Rendered GL textures out
			</digest>
			<description>
				TEXT_HERE
			</description>
		</outlet>
		<outlet id="1" type="OUTLET_TYPE">
			<digest>
				Parameter information outlet
			</digest>
			<description>
				TEXT_HERE
			</description>
		</outlet>
		<outlet id="2" type="OUTLET_TYPE">
			<digest>
				File information outlet
			</digest>
			<description>
				TEXT_HERE
			</description>
		</outlet>
		<outlet id="3" type="OUTLET_TYPE">
			<digest>
				Dump output
			</digest>
			<description>
				TEXT_HERE
			</description>
		</outlet>
	</outletlist>
	
	<!--MOP-->
	<mop matrixinputcount="1" matrixoutputcount="1">
		<matrixoutput name="out" planelink="1" typelink="1" dimlink="1" minplanecount="4" maxplanecount="4" mindimcount="1" maxdimcount="32">
			<types>
				char
			</types>
		</matrixoutput>
	</mop>
	
	<!--MESSAGES-->
	<methodlist>
		<method name="float">
			<arglist />
			<digest>
				Renders and outputs a frame at the given time in seconds.
			</digest>
			<description>
				Renders and outputs a frame at the given time in seconds.
			</description>
		</method>
		<method name="read">
			<arglist>
				<arg name="src-name" type="symbol" />
			</arglist>
			<digest>
				Reads an ISF file from disk.
			</digest>
			<description>
				Reads an ISF file.  If src-name is a path, the file at the path will be loaded- if it's a name of a globally installed file, the globally installed file will be loaded.
			</description>
		</method>
		<method name="getparamlist">
			<arglist />
			<digest>
				Dumps lists describing the loaded ISF's inputs out the appropriate outlet.
			</digest>
			<description>
				Dumps lists describing the loaded ISF's inputs out the appropriate outlet.  The first message output is "getparamlist clear", followed by a number of messages ("name &lt;parameter name&gt;"), followed by the message "getparamlist done".
			</description>
		</method>
		<method name="getparam">
			<arglist>
				<arg name="parameter-name" type="symbol" />
				<arg name="parameter-attribute" type="symbol" />
			</arglist>
			<digest>
				Returns attribute "parameter-attribute" of parameter "parameter-name".
			</digest>
			<description>
				Returns the attribute ("type", "label", "description", "default", "min", "max", "value", "values", or "labels") of a given parameter.  Values are returned in a list which is sent out the "inputs" outlet.
			</description>
		</method>
		<method name="param">
			<arglist>
				<arg name="parameter-name" type="symbol" />
				<arg name="new-parameter-value" optional="0" type="list" />
			</arglist>
			<digest>
				Sets the value of one of the loaded ISF's INPUTS
			</digest>
			<description>
				The number and type of args depends on the type of the input- 'long' INPUTS will expect 'long' values, 'float' INPUTS will expect 'float' values, "image" INPUTS will expect jitter matrices/textures.
			</description>
		</method>
		<method name="all_filenames">
			<arglist />
			<digest>
				List all installed ISF filenames.
			</digest>
			<description>
				Dump a list describing all of the ISF files already installed on this system.  The first message is "filenames clear", followed by one message for each filename ("name &lt;fiename&gt;"), followed by the message "filenames done".
			</description>
		</method>
		<method name="source_filenames">
			<arglist />
			<digest>
				List all ISF source/generator filenames.
			</digest>
			<description>
				Dump a list describing the ISF files installed on this system that are sources/generators (ie: not filters or transitions).  The first message is "filenames clear", followed by one message for each filename ("name &lt;fiename&gt;"), followed by the message "filenames done".
			</description>
		</method>
		<method name="filter_filenames">
			<arglist />
			<digest>
				List all ISF filter filenames.
			</digest>
			<description>
				Dump a list describing the ISF files installed on this system that are image filters (they require an image input to function)  The first message is "filenames clear", followed by one message for each filename ("name &lt;fiename&gt;"), followed by the message "filenames done".
			</description>
		</method>
		<method name="transition_filenames">
			<arglist />
			<digest>
				List all ISF transition filenames.
			</digest>
			<description>
				Dump a list describing the ISF files installed on this system that are transitions (they composite two images together).  The first message is "filenames clear", followed by one message for each filename ("name &lt;fiename&gt;"), followed by the message "filenames done".
			</description>
		</method>
		<method name="all_categories">
			<arglist />
			<digest>
				List all categories.
			</digest>
			<description>
				Dump a list describing all of the ISF categories used across all installed ISF files.  The first message is "categories clear", followed by one message for each category ("category &lt;fiename&gt;"), followed by the message "categories done".
			</description>
		</method>
		<method name="category">
			<arglist>
				<arg name="category-name" type="symbol" />
			</arglist>
			<digest>
				List all ISFs in passed category name.
			</digest>
			<description>
				Dump a list describing all of the ISF filenames that are in the passed category.  The first message is "filenames clear", followed by one message for each filename ("name &lt;fiename&gt;"), followed by the message "filenames done".
			</description>
		</method>
		<method name="description">
			<arglist />
			<digest>
				Output the description of the loaded ISF file.
			</digest>
			<description>
				This returns the root-level description attribute of the ISF file.
			</description>
		</method>
		<method name="credit">
			<arglist />
			<digest>
				Output the "credit" attribute of the loaded ISF file.
			</digest>
			<description>
				This returns the root-level credit attribute of the ISF file.
			</description>
		</method>
		<method name="vsn">
			<arglist />
			<digest>
				Output the "vsn" attribute of the loaded ISF file.
			</digest>
			<description>
				This returns the root-level "vsn" attribute of the ISF file.  This attribute is intended to be used to track the version of an individual ISF file.
			</description>
		</method>
	</methodlist>
	
	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="adapt" get="1" set="1" type="bool" size="1">
			<digest>
				If enabled, render size will match input texture size.
			</digest>
			<description>
				If enabled, render size will match input texture size (or last input texture size if rendering was triggered by a bang or time value).
			</description>
		</attribute>
		<attribute name="dim" get="1" set="1" type="int" size="2">
			<digest>
				The size at which this object should render if adapt is 0
			</digest>
			<description>
				The size at which this object should render if adapt is 0
			</description>
		</attribute>
		<attribute name="file" get="1" set="1" type="symbol" size="1">
			<digest>
				Path of the currently-loaded file.
			</digest>
			<description>
			</description>
		</attribute>
	</attributelist>
	
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="jit.gl.texture" />
		<seealso name="jit.gl.slab" />
		<seealso name="jit.gl.pix" />
		<seealso name="jit.gl.bfg" />
		<seealso display="Video and Graphics 01: Display a Video" module="Video and Graphics" name="01-Display a Video" type="tutorial"/>
		<seealso display="Video and Graphics 09: Building Live Video Effects" module="Video and Graphics" name="09-Building Live Video Effects" type="tutorial"/>
		<seealso display="Video Engines" name="jitter_video_engines" type="vignette"/>
		<seealso display="Direct Texture Output" name="jitter_gl_texture_output" type="vignette"/>
	</seealsolist>
	<discussion>
		ISF is designed to provide a simple, reusable and open format for creating efficient hardware-accelerated interactive resources for media servers, VJ software, non-linear editors, creative coding environments, and any place where you want some gorgeous eye-candy.
		<br/> 
		<br/> 
		ISF is short for "Interactive Shader Format", and is a simple file format that combines a GL shader with metadata that describes how to execute and interact with it. This creates a simple, minimal interface for interacting with the shader that can be shared and reused immediately across any host that supports ISF.
	</discussion>
</c74object>
